// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoFinal.Models;

namespace ProyectoFinal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201014182017_UltimateMigration")]
    partial class UltimateMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProyectoFinal.Models.Entities.Departamento", b =>
                {
                    b.Property<int>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Borrado")
                        .HasColumnType("bit");

                    b.Property<int?>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Estatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("DepartamentoId");

                    b.HasIndex("CreadoPor");

                    b.HasIndex("ModificadoPor");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("ProyectoFinal.Models.Entities.HistorialIncidente", b =>
                {
                    b.Property<int>("HistorialIncidenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Borrado")
                        .HasColumnType("bit");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Estatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IncidenteId")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.HasKey("HistorialIncidenteId");

                    b.HasIndex("CreadoPor");

                    b.HasIndex("IncidenteId");

                    b.HasIndex("ModificadoPor");

                    b.ToTable("HistorialIncidentes");
                });

            modelBuilder.Entity("ProyectoFinal.Models.Entities.Incidente", b =>
                {
                    b.Property<int>("IncidenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Borrado")
                        .HasColumnType("bit");

                    b.Property<string>("ComentarioCierre")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(2147483647);

                    b.Property<string>("Estatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Cierre")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<int>("PrioridadId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("UsuarioAsignadoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioReporteId")
                        .HasColumnType("int");

                    b.HasKey("IncidenteId");

                    b.HasIndex("CreadoPor");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("ModificadoPor");

                    b.HasIndex("PrioridadId");

                    b.HasIndex("UsuarioAsignadoId");

                    b.HasIndex("UsuarioReporteId");

                    b.ToTable("Incidentes");
                });

            modelBuilder.Entity("ProyectoFinal.Models.Entities.Prioridad", b =>
                {
                    b.Property<int>("PrioridadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Borrado")
                        .HasColumnType("bit");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Estatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("SlaId")
                        .HasColumnType("int");

                    b.HasKey("PrioridadId");

                    b.HasIndex("CreadoPor");

                    b.HasIndex("ModificadoPor");

                    b.HasIndex("SlaId");

                    b.ToTable("Prioridades");
                });

            modelBuilder.Entity("ProyectoFinal.Models.Entities.Puesto", b =>
                {
                    b.Property<int>("PuestoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Borrado")
                        .HasColumnType("bit");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Estatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("PuestoId");

                    b.HasIndex("CreadoPor");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("ModificadoPor");

                    b.ToTable("Puestos");
                });

            modelBuilder.Entity("ProyectoFinal.Models.Entities.Sla", b =>
                {
                    b.Property<int>("SlaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Borrado")
                        .HasColumnType("bit");

                    b.Property<int>("CantidadHoras")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Estatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.HasKey("SlaId");

                    b.HasIndex("CreadoPor");

                    b.HasIndex("ModificadoPor");

                    b.ToTable("Slas");
                });

            modelBuilder.Entity("ProyectoFinal.Models.Entities.UsuarioId", b =>
                {
                    b.Property<int>("Usuarioid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Borrado")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Estatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("PuestoId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Usuarioid");

                    b.HasIndex("PuestoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoFinal.Models.Entities.Departamento", b =>
                {
                    b.HasOne("ProyectoFinal.Models.Entities.UsuarioId", "Usuario")
                        .WithMany("Departamentos")
                        .HasForeignKey("CreadoPor");

                    b.HasOne("ProyectoFinal.Models.Entities.UsuarioId", "Usuario1")
                        .WithMany("Departamento1")
                        .HasForeignKey("ModificadoPor")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("ProyectoFinal.Models.Entities.HistorialIncidente", b =>
                {
                    b.HasOne("ProyectoFinal.Models.Entities.UsuarioId", "Usuario")
                        .WithMany("HistorialIncidentes")
                        .HasForeignKey("CreadoPor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoFinal.Models.Entities.Incidente", "Incidente")
                        .WithMany("HistorialIncidentes")
                        .HasForeignKey("IncidenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoFinal.Models.Entities.UsuarioId", "Usuario1")
                        .WithMany("HistorialIncidentes1")
                        .HasForeignKey("ModificadoPor")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("ProyectoFinal.Models.Entities.Incidente", b =>
                {
                    b.HasOne("ProyectoFinal.Models.Entities.UsuarioId", "Usuario")
                        .WithMany("Incidentes")
                        .HasForeignKey("CreadoPor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProyectoFinal.Models.Entities.Departamento", "Departamento")
                        .WithMany("Incidentes")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProyectoFinal.Models.Entities.UsuarioId", "Usuario1")
                        .WithMany("Incidentes1")
                        .HasForeignKey("ModificadoPor")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ProyectoFinal.Models.Entities.Prioridad", "Prioridad")
                        .WithMany("Incidentes")
                        .HasForeignKey("PrioridadId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProyectoFinal.Models.Entities.UsuarioId", "Usuario2")
                        .WithMany("Incidentes2")
                        .HasForeignKey("UsuarioAsignadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProyectoFinal.Models.Entities.UsuarioId", "Usuario3")
                        .WithMany("Incidentes3")
                        .HasForeignKey("UsuarioReporteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoFinal.Models.Entities.Prioridad", b =>
                {
                    b.HasOne("ProyectoFinal.Models.Entities.UsuarioId", "Usuario")
                        .WithMany("Prioridades")
                        .HasForeignKey("CreadoPor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoFinal.Models.Entities.UsuarioId", "Usuario1")
                        .WithMany("Prioridades1")
                        .HasForeignKey("ModificadoPor")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ProyectoFinal.Models.Entities.Sla", "Sla")
                        .WithMany("Prioridades")
                        .HasForeignKey("SlaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoFinal.Models.Entities.Puesto", b =>
                {
                    b.HasOne("ProyectoFinal.Models.Entities.UsuarioId", "Usuario")
                        .WithMany("Puestos")
                        .HasForeignKey("CreadoPor")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ProyectoFinal.Models.Entities.Departamento", "Departamento")
                        .WithMany("Puestos")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ProyectoFinal.Models.Entities.UsuarioId", "Usuario1")
                        .WithMany("Puesto1")
                        .HasForeignKey("ModificadoPor")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("ProyectoFinal.Models.Entities.Sla", b =>
                {
                    b.HasOne("ProyectoFinal.Models.Entities.UsuarioId", "Usuario")
                        .WithMany("Slas")
                        .HasForeignKey("CreadoPor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoFinal.Models.Entities.UsuarioId", "Usuario1")
                        .WithMany("Slas1")
                        .HasForeignKey("ModificadoPor")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("ProyectoFinal.Models.Entities.UsuarioId", b =>
                {
                    b.HasOne("ProyectoFinal.Models.Entities.Puesto", "Puesto")
                        .WithMany("Usuarios")
                        .HasForeignKey("PuestoId")
                        .OnDelete(DeleteBehavior.NoAction);
                });
#pragma warning restore 612, 618
        }
    }
}
